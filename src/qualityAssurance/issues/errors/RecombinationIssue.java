package qualityAssurance.issues.errors;

import java.util.ArrayList;

import qualityAssurance.CorrectionMethod;
import qualityAssurance.QualityAssistent;
import qualityAssurance.issues.QualityFatal;
import qualityAssurance.issues.QualityIssue;
import qualityAssurance.issues.QualityWarning;
import core.Haplogroup;
import core.SampleRanges;
import core.TestSample;

/**
 * @author Dominic Pacher
 * Represents a recombination issue which is generated by the CheckForRecombinationRule
 */
public class RecombinationIssue extends QualityWarning {

	int distanceToReference = 0;
	ArrayList<Haplogroup> referenceHaplogroups = null;
	ArrayList<Haplogroup> currentSampleHaplogroups = null;
	private String customRanges;

	/**
	 * @param assistent Reference to the QualityAssistent
	 * @param sampleOfIssue The sample this issue has been created for
	 * @param distanceToReference The overall distance of the haplogroups (reference/sample) of all fragments
	 * @param referenceHaplogroups	The detected haplogroups for each fragment of the reference sample
	 * @param currentSampleHaplogroups The detected haplogroups for each fragment of the sampleOfissue
	 * @param string 
	 */
	public RecombinationIssue(QualityAssistent assistent,TestSample sampleOfIssue, int distanceToReference,
								ArrayList<Haplogroup> referenceHaplogroups,ArrayList<Haplogroup> currentSampleHaplogroups, String string) {
		super(assistent, sampleOfIssue, "Possible recombination: ");
		this.distanceToReference = distanceToReference;
		this.referenceHaplogroups = referenceHaplogroups;
		this.currentSampleHaplogroups = currentSampleHaplogroups;
		this.customRanges = string;
	}
	
	public String getDescription() {
		return toString();
	}
	
	public String toString(){
		String result = "Possible recombination: " + " - Distance to reference: " + distanceToReference + "\t";

		result += "\nHG [Reference\t";
		for(int i = 0; i < referenceHaplogroups.size();i++){
			result += referenceHaplogroups.get(i) + "\t";
		}
		
		result += "\t] [Sample\t\t";
		for(int i = 0; i < currentSampleHaplogroups.size();i++){
			result += currentSampleHaplogroups.get(i) + "\t";
		}
		
		if (customRanges!=null)
		result+="] "+customRanges+"\t";
		return result;
	}
}
